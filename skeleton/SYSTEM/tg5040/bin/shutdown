#!/bin/sh

# copy to /tmp before running
case "$0" in
  /tmp/*) 
    # already running from /tmp, just continue
    ;;
  *)
    TMP_COPY="/tmp/$(basename "$0")"
    cp "$0" "$TMP_COPY"
    chmod +x "$TMP_COPY"
    exec "$TMP_COPY" "$@"
    ;;
esac

# quit keymon.elf
echo 1 > /sys/kernel/rcu_expedited
PID=$(pidof keymon.elf)
kill -CONT $PID # might be sleeping
kill -TERM $PID
wait $PID

# turn off led
echo 0 > /sys/class/led_anim/enable
echo 0 > /sys/class/led_anim/effect_enable
killall -s TERM hardwareservice
killall -s TERM trimui_inputd

# turn off adbd
/etc/init.d/adbd stop
umount /dev/usb-ffs/adb

# turn off other chatty services pre-poweroff
killall ntpd
killall logread

# quiet udev
udevadm settle -t 3
udevadm control --stop-exec-queue
killall udevd

sync && umount -l /mnt/SDCARD

#######################

LOG=/mnt/UDISK/shutdown.txt
export COLUMNS=1024
echo "===== $(date) =====" > $LOG

echo "--- running processes ---" >> $LOG
ps >> $LOG

echo "--- process tree ---" >> $LOG
pstree -p >> $LOG

echo "--- mounts ---" >> $LOG
cat /proc/mounts >> $LOG

echo "--- keymon ($PID) ---" >> $LOG
cat /proc/$PID/stack >> $LOG
ls -l /proc/$PID/fd >> $LOG
cat /proc/$PID/wchan >> $LOG

#######################

umount /mnt/UDISK

# hardware-based reset if software-based poweroff fails
ubus call system watchdog '{"timeout":8,"frequency":2,"magicclose":false}'
sync && ubus call system watchdog '{"stop":true}'

# actual poweroff
exec /sbin/poweroff
